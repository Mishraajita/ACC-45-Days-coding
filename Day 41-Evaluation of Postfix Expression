//{ Driver Code Starts
// C++ program to evaluate value of a postfix expression

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution
{
    public:
      int top=-1,a[100000];
      void push(int x){
          a[++top]=x;
      }
      int pop(){
          return a[top--];
      }
    //Function to evaluate a postfix expression.
    int evaluatePostfix(string S)
    {
        // Your code here
        
        for(int i=0;i<S.length();i++){
            if(S[i]=='+' || S[i]=='-' || S[i]=='*' || S[i]=='/')
              {int n1=pop();
              int n2=pop();
              char o=S[i];
              int ans=0;
                  switch(o){
                      case '+': ans=n2+n1;
                                break;
                      case '-': ans=n2-n1;
                                break;
                      case '*': ans=n2*n1;
                                break;  
                      case '/': ans=n2/n1;
                                break;          
                  }
                  push(ans);
              }
              else push(S[i]-'0'); //minus 0 because in string every element is a character so to convert it to ordinary no.
        }
        if(top!=-1){ int res=pop();
          return res;}
          return -1;
    }
};

//{ Driver Code Starts.

// Driver program to test above functions
int main()
{
    int t;
    cin>>t;
    cin.ignore(INT_MAX, '\n');
    while(t--)
    {
        string S;
        cin>>S;
        Solution obj;
    
    cout<<obj.evaluatePostfix(S)<<endl;
    }
    return 0;
}

// } Driver Code Ends
