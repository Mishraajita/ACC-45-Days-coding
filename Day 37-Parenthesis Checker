//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends


class Solution
{
    public:
        //int n=x.size();
        int arr[1000],top=-1;
    //Function to check if brackets are balanced or not.
    void push(int a){
        arr[++top]=a;
    }
    void pop(){
        if(top!=-1) top--;
    }
    bool ispar(string x)
    {
        // Your code here
       
        for(int i=0;i<x.length();i++){
            if(x[i]=='(' || x[i]=='{' || x[i]=='[') push(x[i]);
            else if((arr[top]=='(' && x[i]==')') || (arr[top]=='{' && x[i]=='}') || (arr[top]=='[' && x[i]==']'))
                  pop();
            
            else return false;
        }
        if(top==-1) return true;
        else return false;
        
    }

};

//{ Driver Code Starts.

int main()
{
   int t;
   string a;
   cin>>t;
   while(t--)
   {
       cin>>a;
       Solution obj;
       if(obj.ispar(a))
        cout<<"balanced"<<endl;
       else
        cout<<"not balanced"<<endl;
   }
}
// } Driver Code Ends
